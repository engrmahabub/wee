;------------------------------
; conrol structure demo
;------------------------------
#driver

;use type inference
var a := 10, b := 5

;simple decision 
put("a = b") if (a == b)
put("a < b") if (a <  b)
put("a > b") if (a >  b)

write

;single branch decision
is (a != b) ?
  put("a is not equals to b")
is.

;decision with two braches
is (a < 5) ?
  put("yes")
no
  put("no")
is.

write

;nested decisions
set a := 5

is (a < 5) ? 
  put("a<5") 
no 
  is (a > 5) ? 
     put("a>5") 
  no
     put('a == 5')
  is. 
is.

write

;multi-decisions with range
set a := 10 
check 
  when a in [0..5]:
     put('a >= 0 and a <= 5')  
  when a in [5.!10]: 
     put('a >  5 and a < 10')
  else
     put("a > 10")
check.

write

; two assign statements on same line
; variable a and b are already bind
set a, b := 10

  
;two values in one statement  
set a := 1, b := 0
  
;logical operators: and, not, or  
is (a or b) or not (a or b) ?
  put("yes")
no
  put("no")
is.

write

;end