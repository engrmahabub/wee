-------------------------------
-- control structure demo       
-------------------------------
#driver "cs"

-- use type inference
let a = 10, b = 5

-- simple decision 
put ("a = b") if (a = b)
put ("a < b") if (a <  b)
put ("a > b") if (a >  b)

write


-- single branch decision
when a ≠ b:
  put ("a is not equals to b")
when;

-- decision with alternative
when a < 5:
  put "yes"
else
  put "no"
when;

write

-- multi-decisions with range
set a =: 10 

when a ∈ [0..4]:
   put ('a ≥ 0 and a < 5')  
when a ∈ [5..9]:
   put ('a ≥ 5 and a < 10')
when  a < 0:
   put "a is negative"
else
   put ('a ≥ 10')
when;

write

-- two assign statements on same line
-- variable a and b are already bind
set a, b =: 10
  
-- two values in one statement  
set a =: 1, b =: 0
  
-- cascade decision statement
when a ∧ b:  
  put ("both a, b are true")
when a ∨ b:
  put ("one of a or b is true")
when a
  put ("a is true")
when b
  put ("b is true")
else
  put ("this is impossible")  
when;

write

end. 